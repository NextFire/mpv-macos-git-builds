name: CI

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout mpv-player/mpv
        uses: actions/checkout@v2
        with:
          repository: "mpv-player/mpv"
          fetch-depth: 0

      - name: Get versions
        id: versions
        run: |
          commit_sha=$(git log -n1 --format="%h")
          git_version=$(./version.sh)
          echo $commit_sha > COMMIT_SHA
          echo $git_version > VERSION
          echo "::set-output name=commit_sha::$commit_sha"
          echo "::set-output name=git_version::$git_version"

      - name: Get last build version
        id: last_build
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: true
        continue-on-error: true

      - name: Cancel run if last build is up to date
        if: (github.ref == 'refs/heads/main') && endsWith(steps.last_build.outputs.tag, steps.versions.outputs.git_version)
        run: exit 1

      - name: Install dependencies
        run: |
          brew update
          brew install libass ffmpeg --HEAD
          brew install lua@5.1 mujs
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "/usr/local/opt/brotli/lib/libbrotlicommon.1.dylib" /usr/local/opt/brotli/lib/libbrotlidec.1.dylib
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "/usr/local/opt/brotli/lib/libbrotlicommon.1.dylib" /usr/local/opt/brotli/lib/libbrotlienc.1.dylib

      - name: Build mpv
        run: |
          ./bootstrap.py
          ./waf configure
          ./waf
        env:
          CFLAGS: -mmacosx-version-min=10.8

      - name: Bundle mpv
        run: TOOLS/osxbundle.py build/mpv

      - name: tar bundle
        run: tar cvf mpv-${{ steps.versions.outputs.git_version }}.tar mpv.app
        working-directory: build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            build/mpv-${{ steps.versions.outputs.git_version }}.tar
            COMMIT_SHA
            VERSION

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Get versions
        id: versions
        run: |
          echo "::set-output name=commit_sha::$(cat COMMIT_SHA)"
          echo "::set-output name=git_version::$(cat VERSION)"
          echo "::set-output name=date::$(date +%Y-%m-%d)"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mpv-${{ steps.versions.outputs.git_version }}
          name: ${{ steps.versions.outputs.date }}
          body: Bump to mpv-player/mpv@${{ steps.versions.outputs.commit_sha }}
          files: build/mpv-${{ steps.versions.outputs.git_version }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-tap:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout NextFire/homebrew-tap
        uses: actions/checkout@v2
        with:
          repository: "NextFire/homebrew-tap"
          token: ${{ secrets.TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Update cask
        run: |
          git_version=$(cat VERSION)
          build_sha=$(shasum -a 256 build/mpv-$git_version.tar | cut -d ' ' -f 1)
          sed -i "s/version .*/version \"$git_version\"/; s/sha256 .*/sha256 \"$build_sha\"/" Casks/mpv-git.rb
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add Casks/mpv-git.rb
          git commit -m "[CI] Update mpv to $git_version"
          git push
